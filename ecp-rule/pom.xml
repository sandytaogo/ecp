<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.sandy</groupId>
		<artifactId>ecp</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	
	<!--https://docs.drools.org/7.70.0.Final/drools-docs/html_single/index.html -->
	
	<artifactId>ecp-rule</artifactId>
	<name>ecp-rule</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<drools.versoin>7.70.0.Final</drools.versoin>
	</properties>
	<dependencies>
	
		<dependency>
			<groupId>ch.qos.logback</groupId>
  			<artifactId>logback-classic</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>

		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-compiler</artifactId>
			<version>${drools.versoin}</version>
		</dependency>
		
		<dependency>
		    <groupId>org.drools</groupId>
		    <artifactId>drools-mvel</artifactId>
		    <version>${drools.versoin}</version>
		</dependency>
		
		<dependency>
	        <groupId>org.junit.jupiter</groupId>
	        <artifactId>junit-jupiter</artifactId>
	        <version>${junit-jupiter.version}</version>
	        <scope>test</scope>
	    </dependency>
	    
	    <dependency>
	        <groupId>org.junit.jupiter</groupId>
	        <artifactId>junit-jupiter-params</artifactId>
	        <version>${junit-jupiter.version}</version>
	        <scope>test</scope>
	    </dependency>
		
		<dependency>
			<groupId>org.junit.platform</groupId>
	       	<artifactId>junit-platform-launcher</artifactId>
	       	<version>${junit-platform.version}</version>
		    <scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.junit.platform</groupId>
		    <artifactId>junit-platform-runner</artifactId>
		    <version>${junit-platform.version}</version>
		    <scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.mockito</groupId>
  			<artifactId>mockito-core</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
	  			<groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-surefire-plugin</artifactId>
	            <configuration>
	                <skipTests>false</skipTests>
	                <testFailureIgnore>true</testFailureIgnore>
	                <forkMode>once</forkMode>
	            </configuration>
	        </plugin>
			
			<plugin>
			    <groupId>org.jacoco</groupId>
			    <artifactId>jacoco-maven-plugin</artifactId>
			    <version>${jcoco.version}</version>
			    <configuration>
					<!--<destFile>target/jacoco-unit.exec</destFile> -->
			        <dataFile> ${project.build.directory}/jacoco-unit.exec</dataFile>
			        <outputDirectory>${project.build.directory}/jacoco</outputDirectory>
			        <!--
			           	 默认情况下，Surefire 插件将自动包含具有以下通配符模式的所有测试类：
			            "**/Test*.java"- 包括其所有子目录和所有以“Test”开头的 Java 文件名。
			            "**/*Test.java"- 包括其所有子目录和所有以“Test”结尾的 Java 文件名。
			            "**/*Tests.java"- 包括其所有子目录和所有以“Tests”结尾的 Java 文件名。
			            "**/*TestCase.java"- 包括其所有子目录和所有以“TestCase”结尾的 Java 文件名。
			           	 如果测试类不遵循默认通配符模式，则才需要额外包含以下文件
			        -->
			        <includes>
			        	<include>com/sandy/ecp/rule/**</include>
			        </includes>
			         <!-- 注意，如果想要输出代码覆盖率报告，则此处应该为false -->
			        <skipTests>false</skipTests>
			        <!-- 参数 forkCount 定义 Surefire 为执行测试而同时生成的 JVM 进程的最大数量 -->
			        <!-- JaCoCo要求不能为0，此处设置的其实是默认值 -->
			        <forkCount>1</forkCount>
			        <!-- JaCoCo要求不能是Never，此处设置的其实是默认值 -->
			        <forkMode>once</forkMode>
			        <sourceEncoding>UTF-8</sourceEncoding>
			        <!--HTML报告的标题-->
			        <title>${project.name}-单元测试报告</title>
			        
			        <!-- rules裏面指定覆蓋規則 -->
	                <rules>
	                    <rule implementation="org.jacoco.maven.RuleConfiguration">
	                        <element>BUNDLE</element>
	                        <limits>　　
	                            <!-- 指定方法覆盖率到50% -->
	                            <limit implementation="org.jacoco.report.check.Limit">
	                                <counter>METHOD</counter>
	                                <value>COVEREDRATIO</value>
	                                <minimum>0.50</minimum>
	                            </limit>
	                            <!-- 指定分支覆盖到50% -->
	                            <limit implementation="org.jacoco.report.check.Limit">
	                                <counter>BRANCH</counter>
	                                <value>COVEREDRATIO</value>
	                                <minimum>0.50</minimum>
	                            </limit>
	                            <!-- 指定类覆盖到100% -->
	                            <limit implementation="org.jacoco.report.check.Limit">
	                                <counter>CLASS</counter>
	                                <value>MISSEDCOUNT</value>
	                                <maximum>0</maximum>
	                            </limit>
	                        </limits>
	                    </rule>
	                </rules>
			    </configuration>
			    <executions>
			        <execution>
			            <id>jacoco-initialize</id>
			            <goals>
			                <goal>prepare-agent</goal>
			            </goals>
			        </execution>
			        <execution>
			            <id>generate-code-coverage-report</id>
			            <phase>test</phase>
			            <goals>
			                <goal>report</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin>
		</plugins>
	</build>
</project>
