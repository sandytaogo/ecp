spring.cloud.config.uri=127.0.0.1:8888,127.0.0.2:8888
application.domain=http://127.0.0.1
auth.center.domain=http://127.0.0.1/user/login.html
spring.application.name=cloud-gateway
server.port=8090
server.context-path=/
server.servlet.context-path=/
spring.main.allow-bean-definition-overriding=true

spring.servlet.multipart.max-file-size = 7Mb
spring.http.multipart.maxFileSize=7Mb
spring.http.multipart.maxRequestSize=10Mb
spring.http.multipart.max-request-size=10Mb
#encoding
spring.http.encoding.force=true
spring.http.encoding.enabled=true
spring.http.encoding.charset=UTF-8

management.security.enabled=false
management.health.consul.enabled=false
management.endpoints.web.exposure.include=refresh

#spring.cloud.config.uri=http://localhost:8080
health.config.time-to-live=100000
#http://localhost:8500/ui/dc1/services
#consul.exe agent -server -bootstrap -advertise 127.0.0.1 -data-dir ./data -ui
#consul agent -server -bootstrap -advertise 127.0.0.1 -data-dir ./data -ui
spring.cloud.consul.host=127.0.0.1
spring.cloud.consul.port=8500
#In some cases, you may want to fail startup of a service if it cannot connect to the Config Server. 
#If this is the desired behavior, set the bootstrap configuration property
# spring.cloud.config.fail-fast=true to make the client halt with an Exception.
spring.cloud.config.fail-fast=false
spring.cloud.consul.enabled=true
spring.cloud.consul.discovery.enabled=true
spring.cloud.consul.discovery.register=true
spring.cloud.consul.discovery.deregister=true
spring.cloud.consul.discovery.heartbeat.enabled=true
spring.cloud.consul.discovery.health-check-interval=60s
spring.cloud.consul.discovery.health-check-critical-timeout=60s
spring.cloud.consul.discovery.prefer-ip-address=true
spring.cloud.consul.discovery.serviceName=${spring.application.name}
spring.cloud.consul.discovery.instanceId=${spring.application.name}
#spring.cloud.consul.discovery.instance-id=${spring.application.name}:${server.port}
spring.cloud.refresh.refreshable=none
spring.cloud.loadbalancer.retry.enabled=true

spring.cloud.gateway.enabled=true
spring.cloud.gateway.ignored-services="*"
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lowerCaseServiceId=true

spring.cloud.gateway.routes[0].id=user
spring.cloud.gateway.routes[0].uri=lb://user-center
spring.cloud.gateway.routes[0].predicates=Path=/user/**

spring.cloud.gateway.routes[1].id=stock
spring.cloud.gateway.routes[1].uri=lb://stock-application
spring.cloud.gateway.routes[1].predicates=Path=/stock/**

spring.resources.static-locations=static

feign.hystrix.enabled=true
feign.httpclient.enabled=true
feign.retryer=1

#spring.locator.discovery.enabled=true
spring.zipkin.base-url=http://127.0.0.1:9411/
spring.sleuth.trace-id128=true
spring.sleuth.sampler.probability=1.0
#spring.sleuth.web.skipPattern=(^cleanup.*|.+favicon.*)

logging.level.root=INFO
logging.level.org=INFO
logging.level.org.springframework=INFO
logging.level.com.sandy.stock.*.*=INFO
logging.level.org.hibernate.*=INFO
logging.file.name=H:/app/logs/stock/service/catalina.log
logging.pattern.file=H:/app/logs/stock/service/catalina.%d{yyyy-MM-dd}.log
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n
logging.level.main.blog.mapper=INFO