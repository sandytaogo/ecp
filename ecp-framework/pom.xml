<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.sandy.framework</groupId>
		<artifactId>ecp</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	
	<artifactId>ecp-framework</artifactId>
	<name>ecp-framework</name>
	<url>http://maven.apache.org</url>
	
	<properties>
		<java.version>1.8</java.version>
		<itextpdf.version>5.5.8</itextpdf.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<spring.boot.version>2.3.12.RELEASE</spring.boot.version>
		<spring.cloud.version>2.2.7.RELEASE</spring.cloud.version>
		<javax-persistence.version>2.2</javax-persistence.version>
		<swagger.version>2.9.2</swagger.version>
		<itextpdf.version>5.5.8</itextpdf.version>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>

		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>1.65</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-ext-jdk15on</artifactId>
			<version>1.65</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.8</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.8</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-scratchpad</artifactId>
			<version>3.8</version>
		</dependency>
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itext-asian</artifactId>
			<version>5.2.0</version>
		</dependency>

		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>${itextpdf.version}</version>
		</dependency>
		<dependency>
			<groupId>com.itextpdf.tool</groupId>
			<artifactId>xmlworker</artifactId>
			<version>${itextpdf.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>1.8</version>
		</dependency>

		<!-- <dependency> -->
		<!-- <groupId>javax.servlet</groupId> -->
		<!-- <artifactId>javax.servlet-api</artifactId> -->
		<!-- <version>3.0.1</version> -->
		<!-- </dependency> -->
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		
		<dependency>
			<groupId>com.zaxxer</groupId>
		 	<artifactId>HikariCP</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>com.belerweb</groupId>
		    <artifactId>pinyin4j</artifactId>
		    <version>2.5.1</version>
		</dependency>
		
		<dependency>
	        <groupId>org.junit.jupiter</groupId>
	        <artifactId>junit-jupiter</artifactId>
	        <version>${junit-jupiter.version}</version>
	        <scope>test</scope>
	    </dependency>
	    
	    <dependency>
	        <groupId>org.junit.jupiter</groupId>
	        <artifactId>junit-jupiter-params</artifactId>
	        <version>${junit-jupiter.version}</version>
	        <scope>test</scope>
	    </dependency>
		
		<dependency>
			<groupId>org.junit.platform</groupId>
	       	<artifactId>junit-platform-launcher</artifactId>
	       	<version>${junit-platform.version}</version>
		    <scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.junit.platform</groupId>
		    <artifactId>junit-platform-runner</artifactId>
		    <version>${junit-platform.version}</version>
		    <scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			
			<plugin>
	  			<groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-surefire-plugin</artifactId>
	            <configuration>
	                <skipTests>false</skipTests>
	                <testFailureIgnore>true</testFailureIgnore>
	                <forkMode>once</forkMode>
	            </configuration>
	        </plugin>
			
			<plugin>
			    <groupId>org.jacoco</groupId>
			    <artifactId>jacoco-maven-plugin</artifactId>
			    <version>${jcoco.version}</version>
			    <configuration>
					<!--<destFile>target/jacoco-unit.exec</destFile> -->
			        <dataFile> ${project.build.directory}/jacoco-unit.exec</dataFile>
			        <outputDirectory>${project.build.directory}/jacoco</outputDirectory>
			        <!--
			           	 默认情况下，Surefire 插件将自动包含具有以下通配符模式的所有测试类：
			            "**/Test*.java"- 包括其所有子目录和所有以“Test”开头的 Java 文件名。
			            "**/*Test.java"- 包括其所有子目录和所有以“Test”结尾的 Java 文件名。
			            "**/*Tests.java"- 包括其所有子目录和所有以“Tests”结尾的 Java 文件名。
			            "**/*TestCase.java"- 包括其所有子目录和所有以“TestCase”结尾的 Java 文件名。
			           	 如果测试类不遵循默认通配符模式，则才需要额外包含以下文件
			        -->
			        <includes>
			        	<include>com/sandy/ecp/framework/**</include>
			        </includes>
			         <!-- 注意，如果想要输出代码覆盖率报告，则此处应该为false -->
			        <skipTests>false</skipTests>
			        <!-- 参数 forkCount 定义 Surefire 为执行测试而同时生成的 JVM 进程的最大数量 -->
			        <!-- JaCoCo要求不能为0，此处设置的其实是默认值 -->
			        <forkCount>1</forkCount>
			        <!-- JaCoCo要求不能是Never，此处设置的其实是默认值 -->
			        <forkMode>once</forkMode>
			        <sourceEncoding>UTF-8</sourceEncoding>
			        <!--HTML报告的标题-->
			        <title>${project.name}-java code coverage report</title>
			        
			        <!-- rules裏面指定覆蓋規則 -->
	                <rules>
	                    <rule implementation="org.jacoco.maven.RuleConfiguration">
	                        <element>BUNDLE</element>
	                        <limits>　　
	                            <!-- 指定方法覆盖率到50% -->
	                            <limit implementation="org.jacoco.report.check.Limit">
	                                <counter>METHOD</counter>
	                                <value>COVEREDRATIO</value>
	                                <minimum>0.50</minimum>
	                            </limit>
	                            <!-- 指定分支覆盖到50% -->
	                            <limit implementation="org.jacoco.report.check.Limit">
	                                <counter>BRANCH</counter>
	                                <value>COVEREDRATIO</value>
	                                <minimum>0.50</minimum>
	                            </limit>
	                            <!-- 指定类覆盖到100% -->
	                            <limit implementation="org.jacoco.report.check.Limit">
	                                <counter>CLASS</counter>
	                                <value>MISSEDCOUNT</value>
	                                <maximum>0</maximum>
	                            </limit>
	                        </limits>
	                    </rule>
	                </rules>
			    </configuration>
			    <executions>
			        <execution>
			            <id>jacoco-initialize</id>
			            <goals>
			                <goal>prepare-agent</goal>
			            </goals>
			        </execution>
			        <execution>
			            <id>generate-code-coverage-report</id>
			            <phase>test</phase>
			            <goals>
			                <goal>report</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin>
		</plugins>
	</build>
</project>
