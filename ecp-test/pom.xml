<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  
  <modelVersion>4.0.0</modelVersion>
  
  <parent>
    <groupId>com.sandy</groupId>
    <artifactId>ecp</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  
  <artifactId>ecp-test</artifactId>
  
  <name>ecp-test</name>
  <url>http://maven.apache.org</url>
  
  <!--https://www.selenium.dev/downloads/-->
  <!--http://chromedriver.storage.googleapis.com/index.html-->
  <!--https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/#download-the-driver-->
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  <dependencies>

	<dependency>
		<groupId>com.h2database</groupId>
		<artifactId>h2</artifactId>
		<scope>test</scope>
	</dependency>
	
	<dependency>
		<groupId>javax.servlet</groupId>
	    <artifactId>javax.servlet-api</artifactId>
	</dependency>
	
	<dependency>
		<groupId>org.springframework</groupId>
  		<artifactId>spring-web</artifactId>
	</dependency>
	
	<dependency>
		<groupId>org.springframework</groupId>
  		<artifactId>spring-webmvc</artifactId>
	</dependency>
	
	<dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-test</artifactId>
	    <scope>test</scope>
	</dependency>
	
<!-- 	<dependency> -->
<!-- 	    <groupId>org.junit.vintage</groupId> -->
<!-- 	    <artifactId>junit-vintage-engine</artifactId> -->
<!-- 	    <version>${junit-jupiter.version}</version> -->
<!-- 	    <scope>test</scope> -->
<!-- 	</dependency> -->
    
<!--     <dependency> -->
<!--         <groupId>org.junit.jupiter</groupId> -->
<!--         <artifactId>junit-jupiter-engine</artifactId> -->
<!--         <scope>test</scope> -->
<!--     </dependency> -->
        
    <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-params</artifactId>
        <version>${junit-jupiter.version}</version>
        <scope>test</scope>
    </dependency>
    
<!--     <dependency> -->
<!--         <groupId>org.junit.jupiter</groupId> -->
<!--         <artifactId>junit-jupiter-api</artifactId> -->
<!--         <scope>test</scope> -->
<!--     </dependency> -->
    
	<dependency>
	    <groupId>org.junit.platform</groupId>
	    <artifactId>junit-platform-runner</artifactId>
	    <version>${junit-platform.version}</version>
	    <scope>test</scope>
	</dependency>

	<dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${junit-jupiter.version}</version>
        <scope>test</scope>
    </dependency>
	
	<dependency>
		<groupId>org.junit.platform</groupId>
       	<artifactId>junit-platform-launcher</artifactId>
       	<version>${junit-platform.version}</version>
	    <scope>test</scope>
	</dependency>
	
	<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
	<dependency>
	    <groupId>org.seleniumhq.selenium</groupId>
	    <artifactId>selenium-java</artifactId>
<!--	    <version>4.13.0</version>-->
	</dependency>
	
<!--	<dependency>-->
<!--	    <groupId>org.seleniumhq.selenium</groupId>-->
<!--	    <artifactId>htmlunit3-driver</artifactId>-->
<!--	    <version>4.13.0</version>-->
<!--	</dependency>-->
	
	<dependency>
		<groupId>com.google.guava</groupId>
	    <artifactId>guava</artifactId>
	    <version>31.1-jre</version>
	</dependency>
  
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    
	<dependency>
	    <groupId>org.junit</groupId>
	    <artifactId>junit5-api</artifactId>
	    <version>${junit5.version}</version>
	    <scope>test</scope>
	</dependency>
    
  </dependencies>
  
  <build>
  	<plugins>
  		<plugin>
  			<groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
                <source>${java.version}</source>
                <target>${java.version}</target>
            </configuration>
        </plugin>
        
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
                <skipTests>false</skipTests>
                <testFailureIgnore>true</testFailureIgnore>
                <forkMode>once</forkMode>
            </configuration>
        </plugin>
  		
  		<plugin>
		    <groupId>org.jacoco</groupId>
		    <artifactId>jacoco-maven-plugin</artifactId>
		    <version>${jcoco.version}</version>
		    <configuration>
<!-- 		        <destFile>target/jacoco-unit.exec</destFile> -->
<!-- 		        <dataFile>target/jacoco-unit.exec</dataFile> -->
		        <!--<dataFile> ${project.build.directory}/jacoco.exec</dataFile> -->
		        <outputDirectory>${project.build.directory}/jacoco</outputDirectory>
		        <includes>
    				<include>com/sandy/ecp/test/**</include>
		        </includes>
		         <!-- 注意，如果想要输出代码覆盖率报告，则此处应该为false -->
		        <skip>false</skip>
		        <skipTests>false</skipTests>
		        <!-- 参数 forkCount 定义 Surefire 为执行测试而同时生成的 JVM 进程的最大数量 -->
		        <!-- JaCoCo要求不能为0，此处设置的其实是默认值 -->
		        <forkCount>1</forkCount>
		        <!-- JaCoCo要求不能是Never，此处设置的其实是默认值 -->
		        <forkMode>once</forkMode>
		        <sourceEncoding>UTF-8</sourceEncoding>
		        <!--HTML报告的标题-->
		        <title>${project.name}-单元测试报告</title>
		        
		        <!-- rules裏面指定覆蓋規則 -->
                <rules>
                    <rule implementation="org.jacoco.maven.RuleConfiguration">
                        <element>BUNDLE</element>
                        <limits>　　
                            <!-- 指定方法覆盖率到50% -->
                            <limit implementation="org.jacoco.report.check.Limit">
                                <counter>METHOD</counter>
                                <value>COVEREDRATIO</value>
                                <minimum>0.50</minimum>
                            </limit>
                            <!-- 指定分支覆盖到50% -->
                            <limit implementation="org.jacoco.report.check.Limit">
                                <counter>BRANCH</counter>
                                <value>COVEREDRATIO</value>
                                <minimum>0.50</minimum>
                            </limit>
                            <!-- 指定类覆盖到100% -->
                            <limit implementation="org.jacoco.report.check.Limit">
                                <counter>CLASS</counter>
                                <value>MISSEDCOUNT</value>
                                <maximum>0</maximum>
                            </limit>
                        </limits>
                    </rule>
                </rules>
		    </configuration>
		    <executions>
		        <execution>
		            <id>test-report</id>
		            <phase>test</phase>
		            <goals>
		                <goal>report</goal>
		            </goals>
		        </execution>
		        <execution>
		            <id>jacoco-initialize</id>
		            <goals>
		                <goal>prepare-agent</goal>
		            </goals>
		        </execution>
		    </executions>
		</plugin>
		
  	</plugins>
  	
  </build>

</project>
